ARM GAS  /tmp/ccAZCIAD.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbh_conf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_HCD_MspInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_HCD_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	HAL_HCD_MspInit:
  26              	.LFB141:
  27              		.file 1 "Src/usbh_conf.c"
   1:Src/usbh_conf.c **** /**
   2:Src/usbh_conf.c ****   ******************************************************************************
   3:Src/usbh_conf.c ****   * @file           : usbh_conf.c
   4:Src/usbh_conf.c ****   * @version        : v1.0_Cube
   5:Src/usbh_conf.c ****   * @brief          : This file implements the board support package for the USB host library
   6:Src/usbh_conf.c ****   ******************************************************************************
   7:Src/usbh_conf.c ****   * This notice applies to any and all portions of this file
   8:Src/usbh_conf.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usbh_conf.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usbh_conf.c ****   * inserted by the user or by software development tools
  11:Src/usbh_conf.c ****   * are owned by their respective copyright owners.
  12:Src/usbh_conf.c ****   *
  13:Src/usbh_conf.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/usbh_conf.c ****   * All rights reserved.
  15:Src/usbh_conf.c ****   *
  16:Src/usbh_conf.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usbh_conf.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usbh_conf.c ****   *
  19:Src/usbh_conf.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usbh_conf.c ****   *    this list of conditions and the following disclaimer.
  21:Src/usbh_conf.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/usbh_conf.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usbh_conf.c ****   *    and/or other materials provided with the distribution.
  24:Src/usbh_conf.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usbh_conf.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usbh_conf.c ****   *    derived from this software without specific written permission.
  27:Src/usbh_conf.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usbh_conf.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usbh_conf.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/usbh_conf.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usbh_conf.c ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  /tmp/ccAZCIAD.s 			page 2


  32:Src/usbh_conf.c ****   *    this license. 
  33:Src/usbh_conf.c ****   *
  34:Src/usbh_conf.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/usbh_conf.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usbh_conf.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usbh_conf.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usbh_conf.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usbh_conf.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usbh_conf.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usbh_conf.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usbh_conf.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usbh_conf.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usbh_conf.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usbh_conf.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usbh_conf.c ****   *
  47:Src/usbh_conf.c ****   ******************************************************************************
  48:Src/usbh_conf.c ****   */
  49:Src/usbh_conf.c **** 
  50:Src/usbh_conf.c **** /* Includes ------------------------------------------------------------------*/
  51:Src/usbh_conf.c **** #include "usbh_core.h"
  52:Src/usbh_conf.c **** 
  53:Src/usbh_conf.c **** /* USER CODE BEGIN Includes */
  54:Src/usbh_conf.c **** 
  55:Src/usbh_conf.c **** /* USER CODE END Includes */
  56:Src/usbh_conf.c **** 
  57:Src/usbh_conf.c **** /* Private typedef -----------------------------------------------------------*/
  58:Src/usbh_conf.c **** /* Private define ------------------------------------------------------------*/
  59:Src/usbh_conf.c **** /* Private macro -------------------------------------------------------------*/
  60:Src/usbh_conf.c **** 
  61:Src/usbh_conf.c **** /* USER CODE BEGIN PV */
  62:Src/usbh_conf.c **** /* Private variables ---------------------------------------------------------*/
  63:Src/usbh_conf.c **** 
  64:Src/usbh_conf.c **** /* USER CODE END PV */
  65:Src/usbh_conf.c **** 
  66:Src/usbh_conf.c ****                 HCD_HandleTypeDef hhcd_USB_OTG_FS;
  67:Src/usbh_conf.c **** void _Error_Handler(char * file, int line);
  68:Src/usbh_conf.c **** 
  69:Src/usbh_conf.c **** /* USER CODE BEGIN 0 */
  70:Src/usbh_conf.c **** 
  71:Src/usbh_conf.c **** /* USER CODE END 0 */
  72:Src/usbh_conf.c **** 
  73:Src/usbh_conf.c **** /* USER CODE BEGIN PFP */
  74:Src/usbh_conf.c **** /* Private function prototypes -----------------------------------------------*/
  75:Src/usbh_conf.c **** 
  76:Src/usbh_conf.c **** /* USER CODE END PFP */
  77:Src/usbh_conf.c **** 
  78:Src/usbh_conf.c **** /* Private functions ---------------------------------------------------------*/
  79:Src/usbh_conf.c **** 
  80:Src/usbh_conf.c **** /* USER CODE BEGIN 1 */
  81:Src/usbh_conf.c **** 
  82:Src/usbh_conf.c **** /* USER CODE END 1 */
  83:Src/usbh_conf.c **** 
  84:Src/usbh_conf.c **** /*******************************************************************************
  85:Src/usbh_conf.c ****                        LL Driver Callbacks (HCD -> USB Host Library)
  86:Src/usbh_conf.c **** *******************************************************************************/
  87:Src/usbh_conf.c **** /* MSP Init */
  88:Src/usbh_conf.c **** 
ARM GAS  /tmp/ccAZCIAD.s 			page 3


  89:Src/usbh_conf.c **** void HAL_HCD_MspInit(HCD_HandleTypeDef* hcdHandle)
  90:Src/usbh_conf.c **** {
  28              		.loc 1 90 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  91:Src/usbh_conf.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  92:Src/usbh_conf.c ****   if(hcdHandle->Instance==USB_OTG_FS)
  33              		.loc 1 92 0
  34 0000 0368     		ldr	r3, [r0]
  35 0002 B3F1A04F 		cmp	r3, #1342177280
  36 0006 00D0     		beq	.L7
  37 0008 7047     		bx	lr
  38              	.L7:
  90:Src/usbh_conf.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  39              		.loc 1 90 0
  40 000a 30B5     		push	{r4, r5, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 12
  43              		.cfi_offset 4, -12
  44              		.cfi_offset 5, -8
  45              		.cfi_offset 14, -4
  46 000c 89B0     		sub	sp, sp, #36
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 48
  93:Src/usbh_conf.c ****   {
  94:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */
  95:Src/usbh_conf.c **** 
  96:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 0 */
  97:Src/usbh_conf.c ****   
  98:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration    
  99:Src/usbh_conf.c ****     PA8     ------> USB_OTG_FS_SOF
 100:Src/usbh_conf.c ****     PA9     ------> USB_OTG_FS_VBUS
 101:Src/usbh_conf.c ****     PA10     ------> USB_OTG_FS_ID
 102:Src/usbh_conf.c ****     PA11     ------> USB_OTG_FS_DM
 103:Src/usbh_conf.c ****     PA12     ------> USB_OTG_FS_DP 
 104:Src/usbh_conf.c ****     */
 105:Src/usbh_conf.c ****     GPIO_InitStruct.Pin = USB_SOF_Pin|USB_ID_Pin|USB_DM_Pin|USB_DP_Pin;
  49              		.loc 1 105 0
  50 000e 4FF4E853 		mov	r3, #7424
  51 0012 0393     		str	r3, [sp, #12]
 106:Src/usbh_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  52              		.loc 1 106 0
  53 0014 0223     		movs	r3, #2
  54 0016 0493     		str	r3, [sp, #16]
 107:Src/usbh_conf.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  55              		.loc 1 107 0
  56 0018 0024     		movs	r4, #0
  57 001a 0594     		str	r4, [sp, #20]
 108:Src/usbh_conf.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  58              		.loc 1 108 0
  59 001c 0323     		movs	r3, #3
  60 001e 0693     		str	r3, [sp, #24]
 109:Src/usbh_conf.c ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
  61              		.loc 1 109 0
  62 0020 0A23     		movs	r3, #10
ARM GAS  /tmp/ccAZCIAD.s 			page 4


  63 0022 0793     		str	r3, [sp, #28]
 110:Src/usbh_conf.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  64              		.loc 1 110 0
  65 0024 154D     		ldr	r5, .L8
  66 0026 03A9     		add	r1, sp, #12
  67 0028 2846     		mov	r0, r5
  68              	.LVL1:
  69 002a FFF7FEFF 		bl	HAL_GPIO_Init
  70              	.LVL2:
 111:Src/usbh_conf.c **** 
 112:Src/usbh_conf.c ****     GPIO_InitStruct.Pin = USB_VBUS_Pin;
  71              		.loc 1 112 0
  72 002e 4FF40073 		mov	r3, #512
  73 0032 0393     		str	r3, [sp, #12]
 113:Src/usbh_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  74              		.loc 1 113 0
  75 0034 0494     		str	r4, [sp, #16]
 114:Src/usbh_conf.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  76              		.loc 1 114 0
  77 0036 0594     		str	r4, [sp, #20]
 115:Src/usbh_conf.c ****     HAL_GPIO_Init(USB_VBUS_GPIO_Port, &GPIO_InitStruct);
  78              		.loc 1 115 0
  79 0038 03A9     		add	r1, sp, #12
  80 003a 2846     		mov	r0, r5
  81 003c FFF7FEFF 		bl	HAL_GPIO_Init
  82              	.LVL3:
  83              	.LBB2:
 116:Src/usbh_conf.c **** 
 117:Src/usbh_conf.c ****     /* Peripheral clock enable */
 118:Src/usbh_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
  84              		.loc 1 118 0
  85 0040 0F4B     		ldr	r3, .L8+4
  86 0042 5A6B     		ldr	r2, [r3, #52]
  87 0044 42F08002 		orr	r2, r2, #128
  88 0048 5A63     		str	r2, [r3, #52]
  89 004a 5A6B     		ldr	r2, [r3, #52]
  90 004c 02F08002 		and	r2, r2, #128
  91 0050 0192     		str	r2, [sp, #4]
  92 0052 019A     		ldr	r2, [sp, #4]
  93              	.LBB3:
  94 0054 5A6C     		ldr	r2, [r3, #68]
  95 0056 42F48042 		orr	r2, r2, #16384
  96 005a 5A64     		str	r2, [r3, #68]
  97 005c 5B6C     		ldr	r3, [r3, #68]
  98 005e 03F48043 		and	r3, r3, #16384
  99 0062 0293     		str	r3, [sp, #8]
 100 0064 029B     		ldr	r3, [sp, #8]
 101              	.LBE3:
 102              	.LBE2:
 119:Src/usbh_conf.c **** 
 120:Src/usbh_conf.c ****     /* Peripheral interrupt init */
 121:Src/usbh_conf.c ****     HAL_NVIC_SetPriority(OTG_FS_IRQn, 5, 0);
 103              		.loc 1 121 0
 104 0066 2246     		mov	r2, r4
 105 0068 0521     		movs	r1, #5
 106 006a 4320     		movs	r0, #67
 107 006c FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccAZCIAD.s 			page 5


 108              	.LVL4:
 122:Src/usbh_conf.c ****     HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
 109              		.loc 1 122 0
 110 0070 4320     		movs	r0, #67
 111 0072 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 112              	.LVL5:
 123:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */
 124:Src/usbh_conf.c **** 
 125:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 1 */
 126:Src/usbh_conf.c ****   }
 127:Src/usbh_conf.c **** }
 113              		.loc 1 127 0
 114 0076 09B0     		add	sp, sp, #36
 115              	.LCFI2:
 116              		.cfi_def_cfa_offset 12
 117              		@ sp needed
 118 0078 30BD     		pop	{r4, r5, pc}
 119              	.L9:
 120 007a 00BF     		.align	2
 121              	.L8:
 122 007c 00000240 		.word	1073872896
 123 0080 00380240 		.word	1073887232
 124              		.cfi_endproc
 125              	.LFE141:
 127              		.section	.text.HAL_HCD_MspDeInit,"ax",%progbits
 128              		.align	1
 129              		.global	HAL_HCD_MspDeInit
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 133              		.fpu fpv5-sp-d16
 135              	HAL_HCD_MspDeInit:
 136              	.LFB142:
 128:Src/usbh_conf.c **** 
 129:Src/usbh_conf.c **** void HAL_HCD_MspDeInit(HCD_HandleTypeDef* hcdHandle)
 130:Src/usbh_conf.c **** {
 137              		.loc 1 130 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              	.LVL6:
 142 0000 08B5     		push	{r3, lr}
 143              	.LCFI3:
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 3, -8
 146              		.cfi_offset 14, -4
 131:Src/usbh_conf.c ****   if(hcdHandle->Instance==USB_OTG_FS)
 147              		.loc 1 131 0
 148 0002 0368     		ldr	r3, [r0]
 149 0004 B3F1A04F 		cmp	r3, #1342177280
 150 0008 00D0     		beq	.L13
 151              	.LVL7:
 152              	.L10:
 132:Src/usbh_conf.c ****   {
 133:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 0 */
 134:Src/usbh_conf.c **** 
 135:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 0 */
ARM GAS  /tmp/ccAZCIAD.s 			page 6


 136:Src/usbh_conf.c ****     /* Peripheral clock disable */
 137:Src/usbh_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_DISABLE();
 138:Src/usbh_conf.c ****   
 139:Src/usbh_conf.c ****     /**USB_OTG_FS GPIO Configuration    
 140:Src/usbh_conf.c ****     PA8     ------> USB_OTG_FS_SOF
 141:Src/usbh_conf.c ****     PA9     ------> USB_OTG_FS_VBUS
 142:Src/usbh_conf.c ****     PA10     ------> USB_OTG_FS_ID
 143:Src/usbh_conf.c ****     PA11     ------> USB_OTG_FS_DM
 144:Src/usbh_conf.c ****     PA12     ------> USB_OTG_FS_DP 
 145:Src/usbh_conf.c ****     */
 146:Src/usbh_conf.c ****     HAL_GPIO_DeInit(GPIOA, USB_SOF_Pin|USB_VBUS_Pin|USB_ID_Pin|USB_DM_Pin 
 147:Src/usbh_conf.c ****                           |USB_DP_Pin);
 148:Src/usbh_conf.c **** 
 149:Src/usbh_conf.c ****     /* Peripheral interrupt Deinit*/
 150:Src/usbh_conf.c ****     HAL_NVIC_DisableIRQ(OTG_FS_IRQn);
 151:Src/usbh_conf.c **** 
 152:Src/usbh_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 1 */
 153:Src/usbh_conf.c **** 
 154:Src/usbh_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 1 */
 155:Src/usbh_conf.c ****   }
 156:Src/usbh_conf.c **** }
 153              		.loc 1 156 0
 154 000a 08BD     		pop	{r3, pc}
 155              	.LVL8:
 156              	.L13:
 137:Src/usbh_conf.c ****   
 157              		.loc 1 137 0
 158 000c 064A     		ldr	r2, .L14
 159 000e 536B     		ldr	r3, [r2, #52]
 160 0010 23F08003 		bic	r3, r3, #128
 161 0014 5363     		str	r3, [r2, #52]
 146:Src/usbh_conf.c ****                           |USB_DP_Pin);
 162              		.loc 1 146 0
 163 0016 4FF4F851 		mov	r1, #7936
 164 001a 0448     		ldr	r0, .L14+4
 165              	.LVL9:
 166 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 167              	.LVL10:
 150:Src/usbh_conf.c **** 
 168              		.loc 1 150 0
 169 0020 4320     		movs	r0, #67
 170 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 171              	.LVL11:
 172              		.loc 1 156 0
 173 0026 F0E7     		b	.L10
 174              	.L15:
 175              		.align	2
 176              	.L14:
 177 0028 00380240 		.word	1073887232
 178 002c 00000240 		.word	1073872896
 179              		.cfi_endproc
 180              	.LFE142:
 182              		.section	.text.HAL_HCD_SOF_Callback,"ax",%progbits
 183              		.align	1
 184              		.global	HAL_HCD_SOF_Callback
 185              		.syntax unified
 186              		.thumb
ARM GAS  /tmp/ccAZCIAD.s 			page 7


 187              		.thumb_func
 188              		.fpu fpv5-sp-d16
 190              	HAL_HCD_SOF_Callback:
 191              	.LFB143:
 157:Src/usbh_conf.c **** 
 158:Src/usbh_conf.c **** /**
 159:Src/usbh_conf.c ****   * @brief  SOF callback.
 160:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 161:Src/usbh_conf.c ****   * @retval None
 162:Src/usbh_conf.c ****   */
 163:Src/usbh_conf.c **** void HAL_HCD_SOF_Callback(HCD_HandleTypeDef *hhcd)
 164:Src/usbh_conf.c **** {
 192              		.loc 1 164 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              	.LVL12:
 197 0000 08B5     		push	{r3, lr}
 198              	.LCFI4:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 3, -8
 201              		.cfi_offset 14, -4
 165:Src/usbh_conf.c ****   USBH_LL_IncTimer(hhcd->pData);
 202              		.loc 1 165 0
 203 0002 D0F8BC02 		ldr	r0, [r0, #700]
 204              	.LVL13:
 205 0006 FFF7FEFF 		bl	USBH_LL_IncTimer
 206              	.LVL14:
 166:Src/usbh_conf.c **** }
 207              		.loc 1 166 0
 208 000a 08BD     		pop	{r3, pc}
 209              		.cfi_endproc
 210              	.LFE143:
 212              		.section	.text.HAL_HCD_Connect_Callback,"ax",%progbits
 213              		.align	1
 214              		.global	HAL_HCD_Connect_Callback
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu fpv5-sp-d16
 220              	HAL_HCD_Connect_Callback:
 221              	.LFB144:
 167:Src/usbh_conf.c **** 
 168:Src/usbh_conf.c **** /**
 169:Src/usbh_conf.c ****   * @brief  SOF callback.
 170:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 171:Src/usbh_conf.c ****   * @retval None
 172:Src/usbh_conf.c ****   */
 173:Src/usbh_conf.c **** void HAL_HCD_Connect_Callback(HCD_HandleTypeDef *hhcd)
 174:Src/usbh_conf.c **** {
 222              		.loc 1 174 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              	.LVL15:
 227 0000 08B5     		push	{r3, lr}
 228              	.LCFI5:
ARM GAS  /tmp/ccAZCIAD.s 			page 8


 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 3, -8
 231              		.cfi_offset 14, -4
 175:Src/usbh_conf.c ****   USBH_LL_Connect(hhcd->pData);
 232              		.loc 1 175 0
 233 0002 D0F8BC02 		ldr	r0, [r0, #700]
 234              	.LVL16:
 235 0006 FFF7FEFF 		bl	USBH_LL_Connect
 236              	.LVL17:
 176:Src/usbh_conf.c **** }
 237              		.loc 1 176 0
 238 000a 08BD     		pop	{r3, pc}
 239              		.cfi_endproc
 240              	.LFE144:
 242              		.section	.text.HAL_HCD_Disconnect_Callback,"ax",%progbits
 243              		.align	1
 244              		.global	HAL_HCD_Disconnect_Callback
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-sp-d16
 250              	HAL_HCD_Disconnect_Callback:
 251              	.LFB145:
 177:Src/usbh_conf.c **** 
 178:Src/usbh_conf.c **** /**
 179:Src/usbh_conf.c ****   * @brief  SOF callback.
 180:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 181:Src/usbh_conf.c ****   * @retval None
 182:Src/usbh_conf.c ****   */
 183:Src/usbh_conf.c **** void HAL_HCD_Disconnect_Callback(HCD_HandleTypeDef *hhcd)
 184:Src/usbh_conf.c **** {
 252              		.loc 1 184 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              	.LVL18:
 257 0000 08B5     		push	{r3, lr}
 258              	.LCFI6:
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 3, -8
 261              		.cfi_offset 14, -4
 185:Src/usbh_conf.c ****   USBH_LL_Disconnect(hhcd->pData);
 262              		.loc 1 185 0
 263 0002 D0F8BC02 		ldr	r0, [r0, #700]
 264              	.LVL19:
 265 0006 FFF7FEFF 		bl	USBH_LL_Disconnect
 266              	.LVL20:
 186:Src/usbh_conf.c **** }
 267              		.loc 1 186 0
 268 000a 08BD     		pop	{r3, pc}
 269              		.cfi_endproc
 270              	.LFE145:
 272              		.section	.text.HAL_HCD_HC_NotifyURBChange_Callback,"ax",%progbits
 273              		.align	1
 274              		.global	HAL_HCD_HC_NotifyURBChange_Callback
 275              		.syntax unified
 276              		.thumb
ARM GAS  /tmp/ccAZCIAD.s 			page 9


 277              		.thumb_func
 278              		.fpu fpv5-sp-d16
 280              	HAL_HCD_HC_NotifyURBChange_Callback:
 281              	.LFB146:
 187:Src/usbh_conf.c **** 
 188:Src/usbh_conf.c **** /**
 189:Src/usbh_conf.c ****   * @brief  Notify URB state change callback.
 190:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 191:Src/usbh_conf.c ****   * @param  chnum: channel number
 192:Src/usbh_conf.c ****   * @param  urb_state: state
 193:Src/usbh_conf.c ****   * @retval None
 194:Src/usbh_conf.c ****   */
 195:Src/usbh_conf.c **** void HAL_HCD_HC_NotifyURBChange_Callback(HCD_HandleTypeDef *hhcd, uint8_t chnum, HCD_URBStateTypeDe
 196:Src/usbh_conf.c **** {
 282              		.loc 1 196 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              	.LVL21:
 287 0000 08B5     		push	{r3, lr}
 288              	.LCFI7:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 3, -8
 291              		.cfi_offset 14, -4
 197:Src/usbh_conf.c ****   /* To be used with OS to sync URB state with the global state machine */
 198:Src/usbh_conf.c **** #if (USBH_USE_OS == 1)
 199:Src/usbh_conf.c ****   USBH_LL_NotifyURBChange(hhcd->pData);
 292              		.loc 1 199 0
 293 0002 D0F8BC02 		ldr	r0, [r0, #700]
 294              	.LVL22:
 295 0006 FFF7FEFF 		bl	USBH_LL_NotifyURBChange
 296              	.LVL23:
 200:Src/usbh_conf.c **** #endif
 201:Src/usbh_conf.c **** }
 297              		.loc 1 201 0
 298 000a 08BD     		pop	{r3, pc}
 299              		.cfi_endproc
 300              	.LFE146:
 302              		.section	.text.HAL_HCD_PortEnabled_Callback,"ax",%progbits
 303              		.align	1
 304              		.global	HAL_HCD_PortEnabled_Callback
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu fpv5-sp-d16
 310              	HAL_HCD_PortEnabled_Callback:
 311              	.LFB147:
 202:Src/usbh_conf.c **** /**
 203:Src/usbh_conf.c **** * @brief  Port Port Enabled callback.
 204:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 205:Src/usbh_conf.c ****   * @retval None
 206:Src/usbh_conf.c ****   */
 207:Src/usbh_conf.c **** void HAL_HCD_PortEnabled_Callback(HCD_HandleTypeDef *hhcd)
 208:Src/usbh_conf.c **** {
 312              		.loc 1 208 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccAZCIAD.s 			page 10


 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              	.LVL24:
 317 0000 08B5     		push	{r3, lr}
 318              	.LCFI8:
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 3, -8
 321              		.cfi_offset 14, -4
 209:Src/usbh_conf.c ****   USBH_LL_PortEnabled(hhcd->pData);
 322              		.loc 1 209 0
 323 0002 D0F8BC02 		ldr	r0, [r0, #700]
 324              	.LVL25:
 325 0006 FFF7FEFF 		bl	USBH_LL_PortEnabled
 326              	.LVL26:
 210:Src/usbh_conf.c **** } 
 327              		.loc 1 210 0
 328 000a 08BD     		pop	{r3, pc}
 329              		.cfi_endproc
 330              	.LFE147:
 332              		.section	.text.HAL_HCD_PortDisabled_Callback,"ax",%progbits
 333              		.align	1
 334              		.global	HAL_HCD_PortDisabled_Callback
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 338              		.fpu fpv5-sp-d16
 340              	HAL_HCD_PortDisabled_Callback:
 341              	.LFB148:
 211:Src/usbh_conf.c **** 
 212:Src/usbh_conf.c **** /**
 213:Src/usbh_conf.c ****   * @brief  Port Port Disabled callback.
 214:Src/usbh_conf.c ****   * @param  hhcd: HCD handle
 215:Src/usbh_conf.c ****   * @retval None
 216:Src/usbh_conf.c ****   */
 217:Src/usbh_conf.c **** void HAL_HCD_PortDisabled_Callback(HCD_HandleTypeDef *hhcd)
 218:Src/usbh_conf.c **** {
 342              		.loc 1 218 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              	.LVL27:
 347 0000 08B5     		push	{r3, lr}
 348              	.LCFI9:
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 3, -8
 351              		.cfi_offset 14, -4
 219:Src/usbh_conf.c ****   USBH_LL_PortDisabled(hhcd->pData);
 352              		.loc 1 219 0
 353 0002 D0F8BC02 		ldr	r0, [r0, #700]
 354              	.LVL28:
 355 0006 FFF7FEFF 		bl	USBH_LL_PortDisabled
 356              	.LVL29:
 220:Src/usbh_conf.c **** } 
 357              		.loc 1 220 0
 358 000a 08BD     		pop	{r3, pc}
 359              		.cfi_endproc
 360              	.LFE148:
 362              		.section	.text.USBH_LL_Init,"ax",%progbits
ARM GAS  /tmp/ccAZCIAD.s 			page 11


 363              		.align	1
 364              		.global	USBH_LL_Init
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv5-sp-d16
 370              	USBH_LL_Init:
 371              	.LFB149:
 221:Src/usbh_conf.c **** 
 222:Src/usbh_conf.c **** /*******************************************************************************
 223:Src/usbh_conf.c ****                        LL Driver Interface (USB Host Library --> HCD)
 224:Src/usbh_conf.c **** *******************************************************************************/
 225:Src/usbh_conf.c **** 
 226:Src/usbh_conf.c **** /**
 227:Src/usbh_conf.c ****   * @brief  Initialize the low level portion of the host driver.
 228:Src/usbh_conf.c ****   * @param  phost: Host handle
 229:Src/usbh_conf.c ****   * @retval USBH status
 230:Src/usbh_conf.c ****   */
 231:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Init(USBH_HandleTypeDef *phost)
 232:Src/usbh_conf.c **** {
 372              		.loc 1 232 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              	.LVL30:
 233:Src/usbh_conf.c ****   /* Init USB_IP */
 234:Src/usbh_conf.c ****   if (phost->id == HOST_FS) {
 377              		.loc 1 234 0
 378 0000 90F8C033 		ldrb	r3, [r0, #960]	@ zero_extendqisi2
 379 0004 012B     		cmp	r3, #1
 380 0006 01D0     		beq	.L35
 235:Src/usbh_conf.c ****   /* Link the driver to the stack. */
 236:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.pData = phost;
 237:Src/usbh_conf.c ****   phost->pData = &hhcd_USB_OTG_FS;
 238:Src/usbh_conf.c **** 
 239:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Instance = USB_OTG_FS;
 240:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 8;
 241:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 242:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 243:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.phy_itface = HCD_PHY_EMBEDDED;
 244:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 245:Src/usbh_conf.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 246:Src/usbh_conf.c ****   {
 247:Src/usbh_conf.c ****     _Error_Handler(__FILE__, __LINE__);
 248:Src/usbh_conf.c ****   }
 249:Src/usbh_conf.c **** 
 250:Src/usbh_conf.c ****   USBH_LL_SetTimer(phost, HAL_HCD_GetCurrentFrame(&hhcd_USB_OTG_FS));
 251:Src/usbh_conf.c ****   }
 252:Src/usbh_conf.c ****   return USBH_OK;
 253:Src/usbh_conf.c **** }
 381              		.loc 1 253 0
 382 0008 0020     		movs	r0, #0
 383              	.LVL31:
 384 000a 7047     		bx	lr
 385              	.LVL32:
 386              	.L35:
 232:Src/usbh_conf.c ****   /* Init USB_IP */
ARM GAS  /tmp/ccAZCIAD.s 			page 12


 387              		.loc 1 232 0
 388 000c 10B5     		push	{r4, lr}
 389              	.LCFI10:
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 4, -8
 392              		.cfi_offset 14, -4
 393 000e 0446     		mov	r4, r0
 236:Src/usbh_conf.c ****   phost->pData = &hhcd_USB_OTG_FS;
 394              		.loc 1 236 0
 395 0010 1148     		ldr	r0, .L37
 396              	.LVL33:
 397 0012 C0F8BC42 		str	r4, [r0, #700]
 237:Src/usbh_conf.c **** 
 398              		.loc 1 237 0
 399 0016 C4F8C403 		str	r0, [r4, #964]
 239:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Host_channels = 8;
 400              		.loc 1 239 0
 401 001a 4FF0A043 		mov	r3, #1342177280
 402 001e 0360     		str	r3, [r0]
 240:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.speed = HCD_SPEED_FULL;
 403              		.loc 1 240 0
 404 0020 0823     		movs	r3, #8
 405 0022 8360     		str	r3, [r0, #8]
 241:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 406              		.loc 1 241 0
 407 0024 0323     		movs	r3, #3
 408 0026 C360     		str	r3, [r0, #12]
 242:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.phy_itface = HCD_PHY_EMBEDDED;
 409              		.loc 1 242 0
 410 0028 0023     		movs	r3, #0
 411 002a 0361     		str	r3, [r0, #16]
 243:Src/usbh_conf.c ****   hhcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 412              		.loc 1 243 0
 413 002c 0223     		movs	r3, #2
 414 002e 8361     		str	r3, [r0, #24]
 244:Src/usbh_conf.c ****   if (HAL_HCD_Init(&hhcd_USB_OTG_FS) != HAL_OK)
 415              		.loc 1 244 0
 416 0030 0123     		movs	r3, #1
 417 0032 C361     		str	r3, [r0, #28]
 245:Src/usbh_conf.c ****   {
 418              		.loc 1 245 0
 419 0034 FFF7FEFF 		bl	HAL_HCD_Init
 420              	.LVL34:
 421 0038 40B9     		cbnz	r0, .L36
 422              	.L30:
 250:Src/usbh_conf.c ****   }
 423              		.loc 1 250 0
 424 003a 0748     		ldr	r0, .L37
 425 003c FFF7FEFF 		bl	HAL_HCD_GetCurrentFrame
 426              	.LVL35:
 427 0040 0146     		mov	r1, r0
 428 0042 2046     		mov	r0, r4
 429 0044 FFF7FEFF 		bl	USBH_LL_SetTimer
 430              	.LVL36:
 431              		.loc 1 253 0
 432 0048 0020     		movs	r0, #0
 433 004a 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccAZCIAD.s 			page 13


 434              	.LVL37:
 435              	.L36:
 247:Src/usbh_conf.c ****   }
 436              		.loc 1 247 0
 437 004c F721     		movs	r1, #247
 438 004e 0348     		ldr	r0, .L37+4
 439 0050 FFF7FEFF 		bl	_Error_Handler
 440              	.LVL38:
 441 0054 F1E7     		b	.L30
 442              	.L38:
 443 0056 00BF     		.align	2
 444              	.L37:
 445 0058 00000000 		.word	hhcd_USB_OTG_FS
 446 005c 00000000 		.word	.LC0
 447              		.cfi_endproc
 448              	.LFE149:
 450              		.section	.text.USBH_LL_DeInit,"ax",%progbits
 451              		.align	1
 452              		.global	USBH_LL_DeInit
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 456              		.fpu fpv5-sp-d16
 458              	USBH_LL_DeInit:
 459              	.LFB150:
 254:Src/usbh_conf.c **** 
 255:Src/usbh_conf.c **** /**
 256:Src/usbh_conf.c ****   * @brief  De-Initialize the low level portion of the host driver.
 257:Src/usbh_conf.c ****   * @param  phost: Host handle
 258:Src/usbh_conf.c ****   * @retval USBH status
 259:Src/usbh_conf.c ****   */
 260:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_DeInit(USBH_HandleTypeDef *phost)
 261:Src/usbh_conf.c **** {
 460              		.loc 1 261 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              	.LVL39:
 465 0000 08B5     		push	{r3, lr}
 466              	.LCFI11:
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 3, -8
 469              		.cfi_offset 14, -4
 470              	.LVL40:
 262:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 263:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 264:Src/usbh_conf.c **** 
 265:Src/usbh_conf.c ****   hal_status = HAL_HCD_DeInit(phost->pData);
 471              		.loc 1 265 0
 472 0002 D0F8C403 		ldr	r0, [r0, #964]
 473              	.LVL41:
 474 0006 FFF7FEFF 		bl	HAL_HCD_DeInit
 475              	.LVL42:
 266:Src/usbh_conf.c **** 
 267:Src/usbh_conf.c ****   switch (hal_status) {
 476              		.loc 1 267 0
 477 000a 18B1     		cbz	r0, .L41
ARM GAS  /tmp/ccAZCIAD.s 			page 14


 478 000c 0228     		cmp	r0, #2
 479 000e 03D0     		beq	.L42
 268:Src/usbh_conf.c ****     case HAL_OK :
 269:Src/usbh_conf.c ****       usb_status = USBH_OK;
 270:Src/usbh_conf.c ****     break;
 271:Src/usbh_conf.c ****     case HAL_ERROR :
 272:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 480              		.loc 1 272 0
 481 0010 0220     		movs	r0, #2
 482              	.LVL43:
 483              	.L40:
 273:Src/usbh_conf.c ****     break;
 274:Src/usbh_conf.c ****     case HAL_BUSY :
 275:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 276:Src/usbh_conf.c ****     break;
 277:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 278:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 279:Src/usbh_conf.c ****     break;
 280:Src/usbh_conf.c ****     default :
 281:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 282:Src/usbh_conf.c ****     break;
 283:Src/usbh_conf.c ****   }
 284:Src/usbh_conf.c ****   return usb_status;
 285:Src/usbh_conf.c **** }
 484              		.loc 1 285 0
 485 0012 08BD     		pop	{r3, pc}
 486              	.LVL44:
 487              	.L41:
 269:Src/usbh_conf.c ****     break;
 488              		.loc 1 269 0
 489 0014 0020     		movs	r0, #0
 490              	.LVL45:
 491 0016 FCE7     		b	.L40
 492              	.LVL46:
 493              	.L42:
 275:Src/usbh_conf.c ****     break;
 494              		.loc 1 275 0
 495 0018 0120     		movs	r0, #1
 496              	.LVL47:
 276:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 497              		.loc 1 276 0
 498 001a FAE7     		b	.L40
 499              		.cfi_endproc
 500              	.LFE150:
 502              		.section	.text.USBH_LL_Start,"ax",%progbits
 503              		.align	1
 504              		.global	USBH_LL_Start
 505              		.syntax unified
 506              		.thumb
 507              		.thumb_func
 508              		.fpu fpv5-sp-d16
 510              	USBH_LL_Start:
 511              	.LFB151:
 286:Src/usbh_conf.c **** 
 287:Src/usbh_conf.c **** /**
 288:Src/usbh_conf.c ****   * @brief  Start the low level portion of the host driver.
 289:Src/usbh_conf.c ****   * @param  phost: Host handle
ARM GAS  /tmp/ccAZCIAD.s 			page 15


 290:Src/usbh_conf.c ****   * @retval USBH status
 291:Src/usbh_conf.c ****   */
 292:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Start(USBH_HandleTypeDef *phost)
 293:Src/usbh_conf.c **** {
 512              		.loc 1 293 0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              	.LVL48:
 517 0000 08B5     		push	{r3, lr}
 518              	.LCFI12:
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 3, -8
 521              		.cfi_offset 14, -4
 522              	.LVL49:
 294:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 295:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 296:Src/usbh_conf.c **** 
 297:Src/usbh_conf.c ****   hal_status = HAL_HCD_Start(phost->pData);
 523              		.loc 1 297 0
 524 0002 D0F8C403 		ldr	r0, [r0, #964]
 525              	.LVL50:
 526 0006 FFF7FEFF 		bl	HAL_HCD_Start
 527              	.LVL51:
 298:Src/usbh_conf.c **** 
 299:Src/usbh_conf.c ****   switch (hal_status) {
 528              		.loc 1 299 0
 529 000a 18B1     		cbz	r0, .L48
 530 000c 0228     		cmp	r0, #2
 531 000e 03D0     		beq	.L49
 300:Src/usbh_conf.c ****     case HAL_OK :
 301:Src/usbh_conf.c ****       usb_status = USBH_OK;
 302:Src/usbh_conf.c ****     break;
 303:Src/usbh_conf.c ****     case HAL_ERROR :
 304:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 532              		.loc 1 304 0
 533 0010 0220     		movs	r0, #2
 534              	.LVL52:
 535              	.L47:
 305:Src/usbh_conf.c ****     break;
 306:Src/usbh_conf.c ****     case HAL_BUSY :
 307:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 308:Src/usbh_conf.c ****     break;
 309:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 310:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 311:Src/usbh_conf.c ****     break;
 312:Src/usbh_conf.c ****     default :
 313:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 314:Src/usbh_conf.c ****     break;
 315:Src/usbh_conf.c ****   }
 316:Src/usbh_conf.c ****   return usb_status;
 317:Src/usbh_conf.c **** }
 536              		.loc 1 317 0
 537 0012 08BD     		pop	{r3, pc}
 538              	.LVL53:
 539              	.L48:
 301:Src/usbh_conf.c ****     break;
ARM GAS  /tmp/ccAZCIAD.s 			page 16


 540              		.loc 1 301 0
 541 0014 0020     		movs	r0, #0
 542              	.LVL54:
 543 0016 FCE7     		b	.L47
 544              	.LVL55:
 545              	.L49:
 307:Src/usbh_conf.c ****     break;
 546              		.loc 1 307 0
 547 0018 0120     		movs	r0, #1
 548              	.LVL56:
 308:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 549              		.loc 1 308 0
 550 001a FAE7     		b	.L47
 551              		.cfi_endproc
 552              	.LFE151:
 554              		.section	.text.USBH_LL_Stop,"ax",%progbits
 555              		.align	1
 556              		.global	USBH_LL_Stop
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 560              		.fpu fpv5-sp-d16
 562              	USBH_LL_Stop:
 563              	.LFB152:
 318:Src/usbh_conf.c **** 
 319:Src/usbh_conf.c **** /**
 320:Src/usbh_conf.c ****   * @brief  Stop the low level portion of the host driver.
 321:Src/usbh_conf.c ****   * @param  phost: Host handle
 322:Src/usbh_conf.c ****   * @retval USBH status
 323:Src/usbh_conf.c ****   */
 324:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_Stop(USBH_HandleTypeDef *phost)
 325:Src/usbh_conf.c **** {
 564              		.loc 1 325 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              	.LVL57:
 569 0000 08B5     		push	{r3, lr}
 570              	.LCFI13:
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 3, -8
 573              		.cfi_offset 14, -4
 574              	.LVL58:
 326:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 327:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 328:Src/usbh_conf.c **** 
 329:Src/usbh_conf.c ****   hal_status = HAL_HCD_Stop(phost->pData);
 575              		.loc 1 329 0
 576 0002 D0F8C403 		ldr	r0, [r0, #964]
 577              	.LVL59:
 578 0006 FFF7FEFF 		bl	HAL_HCD_Stop
 579              	.LVL60:
 330:Src/usbh_conf.c **** 
 331:Src/usbh_conf.c ****   switch (hal_status) {
 580              		.loc 1 331 0
 581 000a 18B1     		cbz	r0, .L55
 582 000c 0228     		cmp	r0, #2
ARM GAS  /tmp/ccAZCIAD.s 			page 17


 583 000e 03D0     		beq	.L56
 332:Src/usbh_conf.c ****     case HAL_OK :
 333:Src/usbh_conf.c ****       usb_status = USBH_OK;
 334:Src/usbh_conf.c ****     break;
 335:Src/usbh_conf.c ****     case HAL_ERROR :
 336:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 584              		.loc 1 336 0
 585 0010 0220     		movs	r0, #2
 586              	.LVL61:
 587              	.L54:
 337:Src/usbh_conf.c ****     break;
 338:Src/usbh_conf.c ****     case HAL_BUSY :
 339:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 340:Src/usbh_conf.c ****     break;
 341:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 342:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 343:Src/usbh_conf.c ****     break;
 344:Src/usbh_conf.c ****     default :
 345:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 346:Src/usbh_conf.c ****     break;
 347:Src/usbh_conf.c ****   }
 348:Src/usbh_conf.c ****   return usb_status;
 349:Src/usbh_conf.c **** }
 588              		.loc 1 349 0
 589 0012 08BD     		pop	{r3, pc}
 590              	.LVL62:
 591              	.L55:
 333:Src/usbh_conf.c ****     break;
 592              		.loc 1 333 0
 593 0014 0020     		movs	r0, #0
 594              	.LVL63:
 595 0016 FCE7     		b	.L54
 596              	.LVL64:
 597              	.L56:
 339:Src/usbh_conf.c ****     break;
 598              		.loc 1 339 0
 599 0018 0120     		movs	r0, #1
 600              	.LVL65:
 340:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 601              		.loc 1 340 0
 602 001a FAE7     		b	.L54
 603              		.cfi_endproc
 604              	.LFE152:
 606              		.section	.text.USBH_LL_GetSpeed,"ax",%progbits
 607              		.align	1
 608              		.global	USBH_LL_GetSpeed
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu fpv5-sp-d16
 614              	USBH_LL_GetSpeed:
 615              	.LFB153:
 350:Src/usbh_conf.c **** 
 351:Src/usbh_conf.c **** /**
 352:Src/usbh_conf.c ****   * @brief  Return the USB host speed from the low level driver.
 353:Src/usbh_conf.c ****   * @param  phost: Host handle
 354:Src/usbh_conf.c ****   * @retval USBH speeds
ARM GAS  /tmp/ccAZCIAD.s 			page 18


 355:Src/usbh_conf.c ****   */
 356:Src/usbh_conf.c **** USBH_SpeedTypeDef USBH_LL_GetSpeed(USBH_HandleTypeDef *phost)
 357:Src/usbh_conf.c **** {
 616              		.loc 1 357 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              	.LVL66:
 621 0000 08B5     		push	{r3, lr}
 622              	.LCFI14:
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 3, -8
 625              		.cfi_offset 14, -4
 626              	.LVL67:
 358:Src/usbh_conf.c ****   USBH_SpeedTypeDef speed = USBH_SPEED_FULL;
 359:Src/usbh_conf.c **** 
 360:Src/usbh_conf.c ****   switch (HAL_HCD_GetCurrentSpeed(phost->pData))
 627              		.loc 1 360 0
 628 0002 D0F8C403 		ldr	r0, [r0, #964]
 629              	.LVL68:
 630 0006 FFF7FEFF 		bl	HAL_HCD_GetCurrentSpeed
 631              	.LVL69:
 632 000a 18B1     		cbz	r0, .L62
 633 000c 0228     		cmp	r0, #2
 634 000e 03D0     		beq	.L63
 361:Src/usbh_conf.c ****   {
 362:Src/usbh_conf.c ****   case 0 :
 363:Src/usbh_conf.c ****     speed = USBH_SPEED_HIGH;
 364:Src/usbh_conf.c ****     break;
 365:Src/usbh_conf.c **** 
 366:Src/usbh_conf.c ****   case 1 :
 367:Src/usbh_conf.c ****     speed = USBH_SPEED_FULL;
 635              		.loc 1 367 0
 636 0010 0120     		movs	r0, #1
 637              	.LVL70:
 638              	.L61:
 368:Src/usbh_conf.c ****     break;
 369:Src/usbh_conf.c **** 
 370:Src/usbh_conf.c ****   case 2 :
 371:Src/usbh_conf.c ****     speed = USBH_SPEED_LOW;
 372:Src/usbh_conf.c ****     break;
 373:Src/usbh_conf.c **** 
 374:Src/usbh_conf.c ****   default:
 375:Src/usbh_conf.c ****    speed = USBH_SPEED_FULL;
 376:Src/usbh_conf.c ****     break;
 377:Src/usbh_conf.c ****   }
 378:Src/usbh_conf.c ****   return  speed;
 379:Src/usbh_conf.c **** }
 639              		.loc 1 379 0
 640 0012 08BD     		pop	{r3, pc}
 641              	.LVL71:
 642              	.L62:
 363:Src/usbh_conf.c ****     break;
 643              		.loc 1 363 0
 644 0014 0020     		movs	r0, #0
 645 0016 FCE7     		b	.L61
 646              	.L63:
ARM GAS  /tmp/ccAZCIAD.s 			page 19


 647              	.LVL72:
 371:Src/usbh_conf.c ****     break;
 648              		.loc 1 371 0
 649 0018 0220     		movs	r0, #2
 372:Src/usbh_conf.c **** 
 650              		.loc 1 372 0
 651 001a FAE7     		b	.L61
 652              		.cfi_endproc
 653              	.LFE153:
 655              		.section	.text.USBH_LL_ResetPort,"ax",%progbits
 656              		.align	1
 657              		.global	USBH_LL_ResetPort
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
 661              		.fpu fpv5-sp-d16
 663              	USBH_LL_ResetPort:
 664              	.LFB154:
 380:Src/usbh_conf.c **** 
 381:Src/usbh_conf.c **** /**
 382:Src/usbh_conf.c ****   * @brief  Reset the Host port of the low level driver.
 383:Src/usbh_conf.c ****   * @param  phost: Host handle
 384:Src/usbh_conf.c ****   * @retval USBH status
 385:Src/usbh_conf.c ****   */
 386:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_ResetPort(USBH_HandleTypeDef *phost)
 387:Src/usbh_conf.c **** {
 665              		.loc 1 387 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              	.LVL73:
 670 0000 08B5     		push	{r3, lr}
 671              	.LCFI15:
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 3, -8
 674              		.cfi_offset 14, -4
 675              	.LVL74:
 388:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 389:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 390:Src/usbh_conf.c **** 
 391:Src/usbh_conf.c ****   hal_status = HAL_HCD_ResetPort(phost->pData);
 676              		.loc 1 391 0
 677 0002 D0F8C403 		ldr	r0, [r0, #964]
 678              	.LVL75:
 679 0006 FFF7FEFF 		bl	HAL_HCD_ResetPort
 680              	.LVL76:
 392:Src/usbh_conf.c ****   switch (hal_status) {
 681              		.loc 1 392 0
 682 000a 18B1     		cbz	r0, .L69
 683 000c 0228     		cmp	r0, #2
 684 000e 03D0     		beq	.L70
 393:Src/usbh_conf.c ****     case HAL_OK :
 394:Src/usbh_conf.c ****       usb_status = USBH_OK;
 395:Src/usbh_conf.c ****     break;
 396:Src/usbh_conf.c ****     case HAL_ERROR :
 397:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 685              		.loc 1 397 0
ARM GAS  /tmp/ccAZCIAD.s 			page 20


 686 0010 0220     		movs	r0, #2
 687              	.LVL77:
 688              	.L68:
 398:Src/usbh_conf.c ****     break;
 399:Src/usbh_conf.c ****     case HAL_BUSY :
 400:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 401:Src/usbh_conf.c ****     break;
 402:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 403:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 404:Src/usbh_conf.c ****     break;
 405:Src/usbh_conf.c ****     default :
 406:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 407:Src/usbh_conf.c ****     break;
 408:Src/usbh_conf.c ****   }
 409:Src/usbh_conf.c ****   return usb_status;
 410:Src/usbh_conf.c **** }
 689              		.loc 1 410 0
 690 0012 08BD     		pop	{r3, pc}
 691              	.LVL78:
 692              	.L69:
 394:Src/usbh_conf.c ****     break;
 693              		.loc 1 394 0
 694 0014 0020     		movs	r0, #0
 695              	.LVL79:
 696 0016 FCE7     		b	.L68
 697              	.LVL80:
 698              	.L70:
 400:Src/usbh_conf.c ****     break;
 699              		.loc 1 400 0
 700 0018 0120     		movs	r0, #1
 701              	.LVL81:
 401:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 702              		.loc 1 401 0
 703 001a FAE7     		b	.L68
 704              		.cfi_endproc
 705              	.LFE154:
 707              		.section	.text.USBH_LL_GetLastXferSize,"ax",%progbits
 708              		.align	1
 709              		.global	USBH_LL_GetLastXferSize
 710              		.syntax unified
 711              		.thumb
 712              		.thumb_func
 713              		.fpu fpv5-sp-d16
 715              	USBH_LL_GetLastXferSize:
 716              	.LFB155:
 411:Src/usbh_conf.c **** 
 412:Src/usbh_conf.c **** /**
 413:Src/usbh_conf.c ****   * @brief  Return the last transfered packet size.
 414:Src/usbh_conf.c ****   * @param  phost: Host handle
 415:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 416:Src/usbh_conf.c ****   * @retval Packet size
 417:Src/usbh_conf.c ****   */
 418:Src/usbh_conf.c **** uint32_t USBH_LL_GetLastXferSize(USBH_HandleTypeDef *phost, uint8_t pipe)
 419:Src/usbh_conf.c **** {
 717              		.loc 1 419 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccAZCIAD.s 			page 21


 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              	.LVL82:
 722 0000 08B5     		push	{r3, lr}
 723              	.LCFI16:
 724              		.cfi_def_cfa_offset 8
 725              		.cfi_offset 3, -8
 726              		.cfi_offset 14, -4
 420:Src/usbh_conf.c ****   return HAL_HCD_HC_GetXferCount(phost->pData, pipe);
 727              		.loc 1 420 0
 728 0002 D0F8C403 		ldr	r0, [r0, #964]
 729              	.LVL83:
 730 0006 FFF7FEFF 		bl	HAL_HCD_HC_GetXferCount
 731              	.LVL84:
 421:Src/usbh_conf.c **** }
 732              		.loc 1 421 0
 733 000a 08BD     		pop	{r3, pc}
 734              		.cfi_endproc
 735              	.LFE155:
 737              		.section	.text.USBH_LL_OpenPipe,"ax",%progbits
 738              		.align	1
 739              		.global	USBH_LL_OpenPipe
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 743              		.fpu fpv5-sp-d16
 745              	USBH_LL_OpenPipe:
 746              	.LFB156:
 422:Src/usbh_conf.c **** 
 423:Src/usbh_conf.c **** /**
 424:Src/usbh_conf.c ****   * @brief  Open a pipe of the low level driver.
 425:Src/usbh_conf.c ****   * @param  phost: Host handle
 426:Src/usbh_conf.c ****   * @param  pipe_num: Pipe index
 427:Src/usbh_conf.c ****   * @param  epnum: Endpoint number
 428:Src/usbh_conf.c ****   * @param  dev_address: Device USB address
 429:Src/usbh_conf.c ****   * @param  speed: Device Speed
 430:Src/usbh_conf.c ****   * @param  ep_type: Endpoint type
 431:Src/usbh_conf.c ****   * @param  mps: Endpoint max packet size
 432:Src/usbh_conf.c ****   * @retval USBH status
 433:Src/usbh_conf.c ****   */
 434:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_OpenPipe(USBH_HandleTypeDef *phost, uint8_t pipe_num, uint8_t epnum,
 435:Src/usbh_conf.c ****                                     uint8_t dev_address, uint8_t speed, uint8_t ep_type, uint16_t m
 436:Src/usbh_conf.c **** {
 747              		.loc 1 436 0
 748              		.cfi_startproc
 749              		@ args = 12, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751              	.LVL85:
 752 0000 10B5     		push	{r4, lr}
 753              	.LCFI17:
 754              		.cfi_def_cfa_offset 8
 755              		.cfi_offset 4, -8
 756              		.cfi_offset 14, -4
 757 0002 84B0     		sub	sp, sp, #16
 758              	.LCFI18:
 759              		.cfi_def_cfa_offset 24
 760              	.LVL86:
 437:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
ARM GAS  /tmp/ccAZCIAD.s 			page 22


 438:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 439:Src/usbh_conf.c **** 
 440:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_Init(phost->pData, pipe_num, epnum,
 761              		.loc 1 440 0
 762 0004 D0F8C403 		ldr	r0, [r0, #964]
 763              	.LVL87:
 764 0008 BDF82040 		ldrh	r4, [sp, #32]
 765 000c 0294     		str	r4, [sp, #8]
 766 000e 9DF81C40 		ldrb	r4, [sp, #28]	@ zero_extendqisi2
 767 0012 0194     		str	r4, [sp, #4]
 768 0014 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 769 0018 0094     		str	r4, [sp]
 770 001a FFF7FEFF 		bl	HAL_HCD_HC_Init
 771              	.LVL88:
 441:Src/usbh_conf.c ****                                dev_address, speed, ep_type, mps);
 442:Src/usbh_conf.c **** 
 443:Src/usbh_conf.c ****   switch (hal_status) {
 772              		.loc 1 443 0
 773 001e 20B1     		cbz	r0, .L78
 774 0020 0228     		cmp	r0, #2
 775 0022 04D0     		beq	.L79
 444:Src/usbh_conf.c ****     case HAL_OK :
 445:Src/usbh_conf.c ****       usb_status = USBH_OK;
 446:Src/usbh_conf.c ****     break;
 447:Src/usbh_conf.c ****     case HAL_ERROR :
 448:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 776              		.loc 1 448 0
 777 0024 0220     		movs	r0, #2
 778              	.LVL89:
 779              	.L77:
 449:Src/usbh_conf.c ****     break;
 450:Src/usbh_conf.c ****     case HAL_BUSY :
 451:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 452:Src/usbh_conf.c ****     break;
 453:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 454:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 455:Src/usbh_conf.c ****     break;
 456:Src/usbh_conf.c ****     default :
 457:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 458:Src/usbh_conf.c ****     break;
 459:Src/usbh_conf.c ****   }
 460:Src/usbh_conf.c ****   return usb_status;
 461:Src/usbh_conf.c **** }
 780              		.loc 1 461 0
 781 0026 04B0     		add	sp, sp, #16
 782              	.LCFI19:
 783              		.cfi_remember_state
 784              		.cfi_def_cfa_offset 8
 785              		@ sp needed
 786 0028 10BD     		pop	{r4, pc}
 787              	.LVL90:
 788              	.L78:
 789              	.LCFI20:
 790              		.cfi_restore_state
 445:Src/usbh_conf.c ****     break;
 791              		.loc 1 445 0
 792 002a 0020     		movs	r0, #0
ARM GAS  /tmp/ccAZCIAD.s 			page 23


 793              	.LVL91:
 794 002c FBE7     		b	.L77
 795              	.LVL92:
 796              	.L79:
 451:Src/usbh_conf.c ****     break;
 797              		.loc 1 451 0
 798 002e 0120     		movs	r0, #1
 799              	.LVL93:
 452:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 800              		.loc 1 452 0
 801 0030 F9E7     		b	.L77
 802              		.cfi_endproc
 803              	.LFE156:
 805              		.section	.text.USBH_LL_ClosePipe,"ax",%progbits
 806              		.align	1
 807              		.global	USBH_LL_ClosePipe
 808              		.syntax unified
 809              		.thumb
 810              		.thumb_func
 811              		.fpu fpv5-sp-d16
 813              	USBH_LL_ClosePipe:
 814              	.LFB157:
 462:Src/usbh_conf.c **** 
 463:Src/usbh_conf.c **** /**
 464:Src/usbh_conf.c ****   * @brief  Close a pipe of the low level driver.
 465:Src/usbh_conf.c ****   * @param  phost: Host handle
 466:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 467:Src/usbh_conf.c ****   * @retval USBH status
 468:Src/usbh_conf.c ****   */
 469:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_ClosePipe(USBH_HandleTypeDef *phost, uint8_t pipe)
 470:Src/usbh_conf.c **** {
 815              		.loc 1 470 0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 0
 818              		@ frame_needed = 0, uses_anonymous_args = 0
 819              	.LVL94:
 820 0000 08B5     		push	{r3, lr}
 821              	.LCFI21:
 822              		.cfi_def_cfa_offset 8
 823              		.cfi_offset 3, -8
 824              		.cfi_offset 14, -4
 825              	.LVL95:
 471:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 472:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 473:Src/usbh_conf.c **** 
 474:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_Halt(phost->pData, pipe);
 826              		.loc 1 474 0
 827 0002 D0F8C403 		ldr	r0, [r0, #964]
 828              	.LVL96:
 829 0006 FFF7FEFF 		bl	HAL_HCD_HC_Halt
 830              	.LVL97:
 475:Src/usbh_conf.c **** 
 476:Src/usbh_conf.c ****   switch (hal_status) {
 831              		.loc 1 476 0
 832 000a 18B1     		cbz	r0, .L85
 833 000c 0228     		cmp	r0, #2
 834 000e 03D0     		beq	.L86
ARM GAS  /tmp/ccAZCIAD.s 			page 24


 477:Src/usbh_conf.c ****     case HAL_OK :
 478:Src/usbh_conf.c ****       usb_status = USBH_OK;
 479:Src/usbh_conf.c ****     break;
 480:Src/usbh_conf.c ****     case HAL_ERROR :
 481:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 835              		.loc 1 481 0
 836 0010 0220     		movs	r0, #2
 837              	.LVL98:
 838              	.L84:
 482:Src/usbh_conf.c ****     break;
 483:Src/usbh_conf.c ****     case HAL_BUSY :
 484:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 485:Src/usbh_conf.c ****     break;
 486:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 487:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 488:Src/usbh_conf.c ****     break;
 489:Src/usbh_conf.c ****     default :
 490:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 491:Src/usbh_conf.c ****     break;
 492:Src/usbh_conf.c ****   }
 493:Src/usbh_conf.c ****   return usb_status;
 494:Src/usbh_conf.c **** }
 839              		.loc 1 494 0
 840 0012 08BD     		pop	{r3, pc}
 841              	.LVL99:
 842              	.L85:
 478:Src/usbh_conf.c ****     break;
 843              		.loc 1 478 0
 844 0014 0020     		movs	r0, #0
 845              	.LVL100:
 846 0016 FCE7     		b	.L84
 847              	.LVL101:
 848              	.L86:
 484:Src/usbh_conf.c ****     break;
 849              		.loc 1 484 0
 850 0018 0120     		movs	r0, #1
 851              	.LVL102:
 485:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 852              		.loc 1 485 0
 853 001a FAE7     		b	.L84
 854              		.cfi_endproc
 855              	.LFE157:
 857              		.section	.text.USBH_LL_SubmitURB,"ax",%progbits
 858              		.align	1
 859              		.global	USBH_LL_SubmitURB
 860              		.syntax unified
 861              		.thumb
 862              		.thumb_func
 863              		.fpu fpv5-sp-d16
 865              	USBH_LL_SubmitURB:
 866              	.LFB158:
 495:Src/usbh_conf.c **** 
 496:Src/usbh_conf.c **** /**
 497:Src/usbh_conf.c ****   * @brief  Submit a new URB to the low level driver.
 498:Src/usbh_conf.c ****   * @param  phost: Host handle
 499:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 500:Src/usbh_conf.c ****   *         This parameter can be a value from 1 to 15
ARM GAS  /tmp/ccAZCIAD.s 			page 25


 501:Src/usbh_conf.c ****   * @param  direction : Channel number
 502:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 503:Src/usbh_conf.c ****   *           0 : Output
 504:Src/usbh_conf.c ****   *           1 : Input
 505:Src/usbh_conf.c ****   * @param  ep_type : Endpoint Type
 506:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 507:Src/usbh_conf.c ****   *            @arg EP_TYPE_CTRL: Control type
 508:Src/usbh_conf.c ****   *            @arg EP_TYPE_ISOC: Isochrounous type
 509:Src/usbh_conf.c ****   *            @arg EP_TYPE_BULK: Bulk type
 510:Src/usbh_conf.c ****   *            @arg EP_TYPE_INTR: Interrupt type
 511:Src/usbh_conf.c ****   * @param  token : Endpoint Type
 512:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 513:Src/usbh_conf.c ****   *            @arg 0: PID_SETUP
 514:Src/usbh_conf.c ****   *            @arg 1: PID_DATA
 515:Src/usbh_conf.c ****   * @param  pbuff : pointer to URB data
 516:Src/usbh_conf.c ****   * @param  length : Length of URB data
 517:Src/usbh_conf.c ****   * @param  do_ping : activate do ping protocol (for high speed only)
 518:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 519:Src/usbh_conf.c ****   *           0 : do ping inactive
 520:Src/usbh_conf.c ****   *           1 : do ping active
 521:Src/usbh_conf.c ****   * @retval Status
 522:Src/usbh_conf.c ****   */
 523:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_SubmitURB(USBH_HandleTypeDef *phost, uint8_t pipe, uint8_t direction,
 524:Src/usbh_conf.c ****                                      uint8_t ep_type, uint8_t token, uint8_t *pbuff, uint16_t lengt
 525:Src/usbh_conf.c ****                                      uint8_t do_ping)
 526:Src/usbh_conf.c **** {
 867              		.loc 1 526 0
 868              		.cfi_startproc
 869              		@ args = 16, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              	.LVL103:
 872 0000 10B5     		push	{r4, lr}
 873              	.LCFI22:
 874              		.cfi_def_cfa_offset 8
 875              		.cfi_offset 4, -8
 876              		.cfi_offset 14, -4
 877 0002 84B0     		sub	sp, sp, #16
 878              	.LCFI23:
 879              		.cfi_def_cfa_offset 24
 880              	.LVL104:
 527:Src/usbh_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 528:Src/usbh_conf.c ****   USBH_StatusTypeDef usb_status = USBH_OK;
 529:Src/usbh_conf.c **** 
 530:Src/usbh_conf.c ****   hal_status = HAL_HCD_HC_SubmitRequest(phost->pData, pipe, direction ,
 881              		.loc 1 530 0
 882 0004 D0F8C403 		ldr	r0, [r0, #964]
 883              	.LVL105:
 884 0008 9DF82440 		ldrb	r4, [sp, #36]	@ zero_extendqisi2
 885 000c 0394     		str	r4, [sp, #12]
 886 000e BDF82040 		ldrh	r4, [sp, #32]
 887 0012 0294     		str	r4, [sp, #8]
 888 0014 079C     		ldr	r4, [sp, #28]
 889 0016 0194     		str	r4, [sp, #4]
 890 0018 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 891 001c 0094     		str	r4, [sp]
 892 001e FFF7FEFF 		bl	HAL_HCD_HC_SubmitRequest
 893              	.LVL106:
ARM GAS  /tmp/ccAZCIAD.s 			page 26


 531:Src/usbh_conf.c ****                                         ep_type, token, pbuff, length,
 532:Src/usbh_conf.c ****                                         do_ping);
 533:Src/usbh_conf.c **** 
 534:Src/usbh_conf.c ****   switch (hal_status) {
 894              		.loc 1 534 0
 895 0022 20B1     		cbz	r0, .L92
 896 0024 0228     		cmp	r0, #2
 897 0026 04D0     		beq	.L93
 535:Src/usbh_conf.c ****     case HAL_OK :
 536:Src/usbh_conf.c ****       usb_status = USBH_OK;
 537:Src/usbh_conf.c ****     break;
 538:Src/usbh_conf.c ****     case HAL_ERROR :
 539:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 898              		.loc 1 539 0
 899 0028 0220     		movs	r0, #2
 900              	.LVL107:
 901              	.L91:
 540:Src/usbh_conf.c ****     break;
 541:Src/usbh_conf.c ****     case HAL_BUSY :
 542:Src/usbh_conf.c ****       usb_status = USBH_BUSY;
 543:Src/usbh_conf.c ****     break;
 544:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 545:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 546:Src/usbh_conf.c ****     break;
 547:Src/usbh_conf.c ****     default :
 548:Src/usbh_conf.c ****       usb_status = USBH_FAIL;
 549:Src/usbh_conf.c ****     break;
 550:Src/usbh_conf.c ****   }
 551:Src/usbh_conf.c ****   return usb_status;
 552:Src/usbh_conf.c **** }
 902              		.loc 1 552 0
 903 002a 04B0     		add	sp, sp, #16
 904              	.LCFI24:
 905              		.cfi_remember_state
 906              		.cfi_def_cfa_offset 8
 907              		@ sp needed
 908 002c 10BD     		pop	{r4, pc}
 909              	.LVL108:
 910              	.L92:
 911              	.LCFI25:
 912              		.cfi_restore_state
 536:Src/usbh_conf.c ****     break;
 913              		.loc 1 536 0
 914 002e 0020     		movs	r0, #0
 915              	.LVL109:
 916 0030 FBE7     		b	.L91
 917              	.LVL110:
 918              	.L93:
 542:Src/usbh_conf.c ****     break;
 919              		.loc 1 542 0
 920 0032 0120     		movs	r0, #1
 921              	.LVL111:
 543:Src/usbh_conf.c ****     case HAL_TIMEOUT :
 922              		.loc 1 543 0
 923 0034 F9E7     		b	.L91
 924              		.cfi_endproc
 925              	.LFE158:
ARM GAS  /tmp/ccAZCIAD.s 			page 27


 927              		.section	.text.USBH_LL_GetURBState,"ax",%progbits
 928              		.align	1
 929              		.global	USBH_LL_GetURBState
 930              		.syntax unified
 931              		.thumb
 932              		.thumb_func
 933              		.fpu fpv5-sp-d16
 935              	USBH_LL_GetURBState:
 936              	.LFB159:
 553:Src/usbh_conf.c **** 
 554:Src/usbh_conf.c **** /**
 555:Src/usbh_conf.c ****   * @brief  Get a URB state from the low level driver.
 556:Src/usbh_conf.c ****   * @param  phost: Host handle
 557:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 558:Src/usbh_conf.c ****   *         This parameter can be a value from 1 to 15
 559:Src/usbh_conf.c ****   * @retval URB state
 560:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 561:Src/usbh_conf.c ****   *            @arg URB_IDLE
 562:Src/usbh_conf.c ****   *            @arg URB_DONE
 563:Src/usbh_conf.c ****   *            @arg URB_NOTREADY
 564:Src/usbh_conf.c ****   *            @arg URB_NYET
 565:Src/usbh_conf.c ****   *            @arg URB_ERROR
 566:Src/usbh_conf.c ****   *            @arg URB_STALL
 567:Src/usbh_conf.c ****   */
 568:Src/usbh_conf.c **** USBH_URBStateTypeDef USBH_LL_GetURBState(USBH_HandleTypeDef *phost, uint8_t pipe)
 569:Src/usbh_conf.c **** {
 937              		.loc 1 569 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              	.LVL112:
 942 0000 08B5     		push	{r3, lr}
 943              	.LCFI26:
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 3, -8
 946              		.cfi_offset 14, -4
 570:Src/usbh_conf.c ****   return (USBH_URBStateTypeDef)HAL_HCD_HC_GetURBState (phost->pData, pipe);
 947              		.loc 1 570 0
 948 0002 D0F8C403 		ldr	r0, [r0, #964]
 949              	.LVL113:
 950 0006 FFF7FEFF 		bl	HAL_HCD_HC_GetURBState
 951              	.LVL114:
 571:Src/usbh_conf.c **** }
 952              		.loc 1 571 0
 953 000a 08BD     		pop	{r3, pc}
 954              		.cfi_endproc
 955              	.LFE159:
 957              		.section	.text.USBH_LL_DriverVBUS,"ax",%progbits
 958              		.align	1
 959              		.global	USBH_LL_DriverVBUS
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 963              		.fpu fpv5-sp-d16
 965              	USBH_LL_DriverVBUS:
 966              	.LFB160:
 572:Src/usbh_conf.c **** 
ARM GAS  /tmp/ccAZCIAD.s 			page 28


 573:Src/usbh_conf.c **** /**
 574:Src/usbh_conf.c ****   * @brief  Drive VBUS.
 575:Src/usbh_conf.c ****   * @param  phost: Host handle
 576:Src/usbh_conf.c ****   * @param  state : VBUS state
 577:Src/usbh_conf.c ****   *          This parameter can be one of the these values:
 578:Src/usbh_conf.c ****   *           0 : VBUS Active
 579:Src/usbh_conf.c ****   *           1 : VBUS Inactive
 580:Src/usbh_conf.c ****   * @retval Status
 581:Src/usbh_conf.c ****   */
 582:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_DriverVBUS(USBH_HandleTypeDef *phost, uint8_t state)
 583:Src/usbh_conf.c **** {
 967              		.loc 1 583 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971              	.LVL115:
 972 0000 08B5     		push	{r3, lr}
 973              	.LCFI27:
 974              		.cfi_def_cfa_offset 8
 975              		.cfi_offset 3, -8
 976              		.cfi_offset 14, -4
 584:Src/usbh_conf.c **** 
 585:Src/usbh_conf.c ****   /* USER CODE BEGIN 0 */
 586:Src/usbh_conf.c **** 
 587:Src/usbh_conf.c ****   /* USER CODE END 0*/
 588:Src/usbh_conf.c **** 
 589:Src/usbh_conf.c ****   if (phost->id == HOST_FS)
 590:Src/usbh_conf.c ****   {
 591:Src/usbh_conf.c ****     if (state == 0)
 592:Src/usbh_conf.c ****     {
 593:Src/usbh_conf.c ****       /* Drive high Charge pump */
 594:Src/usbh_conf.c ****       /* ToDo: Add IOE driver control */
 595:Src/usbh_conf.c ****       /* USER CODE BEGIN DRIVE_HIGH_CHARGE_FOR_FS */
 596:Src/usbh_conf.c **** 
 597:Src/usbh_conf.c ****       /* USER CODE END DRIVE_HIGH_CHARGE_FOR_FS */
 598:Src/usbh_conf.c ****     }
 599:Src/usbh_conf.c ****     else
 600:Src/usbh_conf.c ****     {
 601:Src/usbh_conf.c ****       /* Drive low Charge pump */
 602:Src/usbh_conf.c ****       /* ToDo: Add IOE driver control */
 603:Src/usbh_conf.c ****       /* USER CODE BEGIN DRIVE_LOW_CHARGE_FOR_FS */
 604:Src/usbh_conf.c **** 
 605:Src/usbh_conf.c ****       /* USER CODE END DRIVE_LOW_CHARGE_FOR_FS */
 606:Src/usbh_conf.c ****     }
 607:Src/usbh_conf.c ****   }
 608:Src/usbh_conf.c ****   HAL_Delay(200);
 977              		.loc 1 608 0
 978 0002 C820     		movs	r0, #200
 979              	.LVL116:
 980 0004 FFF7FEFF 		bl	HAL_Delay
 981              	.LVL117:
 609:Src/usbh_conf.c ****   return USBH_OK;
 610:Src/usbh_conf.c **** }
 982              		.loc 1 610 0
 983 0008 0020     		movs	r0, #0
 984 000a 08BD     		pop	{r3, pc}
 985              		.cfi_endproc
ARM GAS  /tmp/ccAZCIAD.s 			page 29


 986              	.LFE160:
 988              		.section	.text.USBH_LL_SetToggle,"ax",%progbits
 989              		.align	1
 990              		.global	USBH_LL_SetToggle
 991              		.syntax unified
 992              		.thumb
 993              		.thumb_func
 994              		.fpu fpv5-sp-d16
 996              	USBH_LL_SetToggle:
 997              	.LFB161:
 611:Src/usbh_conf.c **** 
 612:Src/usbh_conf.c **** /**
 613:Src/usbh_conf.c ****   * @brief  Set toggle for a pipe.
 614:Src/usbh_conf.c ****   * @param  phost: Host handle
 615:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 616:Src/usbh_conf.c ****   * @param  toggle: toggle (0/1)
 617:Src/usbh_conf.c ****   * @retval Status
 618:Src/usbh_conf.c ****   */
 619:Src/usbh_conf.c **** USBH_StatusTypeDef USBH_LL_SetToggle(USBH_HandleTypeDef *phost, uint8_t pipe, uint8_t toggle)
 620:Src/usbh_conf.c **** {
 998              		.loc 1 620 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002              		@ link register save eliminated.
 1003              	.LVL118:
 1004 0000 10B4     		push	{r4}
 1005              	.LCFI28:
 1006              		.cfi_def_cfa_offset 4
 1007              		.cfi_offset 4, -4
 621:Src/usbh_conf.c ****   HCD_HandleTypeDef *pHandle;
 622:Src/usbh_conf.c ****   pHandle = phost->pData;
 1008              		.loc 1 622 0
 1009 0002 D0F8C433 		ldr	r3, [r0, #964]
 1010              	.LVL119:
 623:Src/usbh_conf.c **** 
 624:Src/usbh_conf.c ****   if(pHandle->hc[pipe].ep_is_in)
 1011              		.loc 1 624 0
 1012 0006 01EB8104 		add	r4, r1, r1, lsl #2
 1013 000a E000     		lsls	r0, r4, #3
 1014              	.LVL120:
 1015 000c 0446     		mov	r4, r0
 1016 000e 1844     		add	r0, r0, r3
 1017 0010 90F83B00 		ldrb	r0, [r0, #59]	@ zero_extendqisi2
 1018 0014 48B9     		cbnz	r0, .L105
 625:Src/usbh_conf.c ****   {
 626:Src/usbh_conf.c ****     pHandle->hc[pipe].toggle_in = toggle;
 627:Src/usbh_conf.c ****   }
 628:Src/usbh_conf.c ****   else
 629:Src/usbh_conf.c ****   {
 630:Src/usbh_conf.c ****     pHandle->hc[pipe].toggle_out = toggle;
 1019              		.loc 1 630 0
 1020 0016 01EB8101 		add	r1, r1, r1, lsl #2
 1021              	.LVL121:
 1022 001a C800     		lsls	r0, r1, #3
 1023 001c 0344     		add	r3, r3, r0
 1024              	.LVL122:
ARM GAS  /tmp/ccAZCIAD.s 			page 30


 1025 001e 83F85120 		strb	r2, [r3, #81]
 1026              	.LVL123:
 1027              	.L103:
 631:Src/usbh_conf.c ****   }
 632:Src/usbh_conf.c **** 
 633:Src/usbh_conf.c ****   return USBH_OK;
 634:Src/usbh_conf.c **** }
 1028              		.loc 1 634 0
 1029 0022 0020     		movs	r0, #0
 1030 0024 5DF8044B 		ldr	r4, [sp], #4
 1031              	.LCFI29:
 1032              		.cfi_remember_state
 1033              		.cfi_restore 4
 1034              		.cfi_def_cfa_offset 0
 1035 0028 7047     		bx	lr
 1036              	.LVL124:
 1037              	.L105:
 1038              	.LCFI30:
 1039              		.cfi_restore_state
 626:Src/usbh_conf.c ****   }
 1040              		.loc 1 626 0
 1041 002a 2344     		add	r3, r3, r4
 1042              	.LVL125:
 1043 002c 83F85020 		strb	r2, [r3, #80]
 1044              	.LVL126:
 1045 0030 F7E7     		b	.L103
 1046              		.cfi_endproc
 1047              	.LFE161:
 1049              		.section	.text.USBH_LL_GetToggle,"ax",%progbits
 1050              		.align	1
 1051              		.global	USBH_LL_GetToggle
 1052              		.syntax unified
 1053              		.thumb
 1054              		.thumb_func
 1055              		.fpu fpv5-sp-d16
 1057              	USBH_LL_GetToggle:
 1058              	.LFB162:
 635:Src/usbh_conf.c **** 
 636:Src/usbh_conf.c **** /**
 637:Src/usbh_conf.c ****   * @brief  Return the current toggle of a pipe.
 638:Src/usbh_conf.c ****   * @param  phost: Host handle
 639:Src/usbh_conf.c ****   * @param  pipe: Pipe index
 640:Src/usbh_conf.c ****   * @retval toggle (0/1)
 641:Src/usbh_conf.c ****   */
 642:Src/usbh_conf.c **** uint8_t USBH_LL_GetToggle(USBH_HandleTypeDef *phost, uint8_t pipe)
 643:Src/usbh_conf.c **** {
 1059              		.loc 1 643 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063              		@ link register save eliminated.
 1064              	.LVL127:
 644:Src/usbh_conf.c ****   uint8_t toggle = 0;
 645:Src/usbh_conf.c ****   HCD_HandleTypeDef *pHandle;
 646:Src/usbh_conf.c ****   pHandle = phost->pData;
 1065              		.loc 1 646 0
 1066 0000 D0F8C433 		ldr	r3, [r0, #964]
ARM GAS  /tmp/ccAZCIAD.s 			page 31


 1067              	.LVL128:
 647:Src/usbh_conf.c **** 
 648:Src/usbh_conf.c ****   if(pHandle->hc[pipe].ep_is_in)
 1068              		.loc 1 648 0
 1069 0004 01EB8100 		add	r0, r1, r1, lsl #2
 1070              	.LVL129:
 1071 0008 C200     		lsls	r2, r0, #3
 1072 000a 1046     		mov	r0, r2
 1073 000c 1A44     		add	r2, r2, r3
 1074 000e 92F83B20 		ldrb	r2, [r2, #59]	@ zero_extendqisi2
 1075 0012 32B9     		cbnz	r2, .L109
 649:Src/usbh_conf.c ****   {
 650:Src/usbh_conf.c ****     toggle = pHandle->hc[pipe].toggle_in;
 651:Src/usbh_conf.c ****   }
 652:Src/usbh_conf.c ****   else
 653:Src/usbh_conf.c ****   {
 654:Src/usbh_conf.c ****     toggle = pHandle->hc[pipe].toggle_out;
 1076              		.loc 1 654 0
 1077 0014 01EB8101 		add	r1, r1, r1, lsl #2
 1078              	.LVL130:
 1079 0018 CA00     		lsls	r2, r1, #3
 1080 001a 1344     		add	r3, r3, r2
 1081              	.LVL131:
 1082 001c 93F85100 		ldrb	r0, [r3, #81]	@ zero_extendqisi2
 1083              	.LVL132:
 655:Src/usbh_conf.c ****   }
 656:Src/usbh_conf.c ****   return toggle;
 657:Src/usbh_conf.c **** }
 1084              		.loc 1 657 0
 1085 0020 7047     		bx	lr
 1086              	.LVL133:
 1087              	.L109:
 650:Src/usbh_conf.c ****   }
 1088              		.loc 1 650 0
 1089 0022 0344     		add	r3, r3, r0
 1090              	.LVL134:
 1091 0024 93F85000 		ldrb	r0, [r3, #80]	@ zero_extendqisi2
 1092              	.LVL135:
 1093 0028 7047     		bx	lr
 1094              		.cfi_endproc
 1095              	.LFE162:
 1097              		.section	.text.USBH_Delay,"ax",%progbits
 1098              		.align	1
 1099              		.global	USBH_Delay
 1100              		.syntax unified
 1101              		.thumb
 1102              		.thumb_func
 1103              		.fpu fpv5-sp-d16
 1105              	USBH_Delay:
 1106              	.LFB163:
 658:Src/usbh_conf.c **** 
 659:Src/usbh_conf.c **** /**
 660:Src/usbh_conf.c ****   * @brief  Delay routine for the USB Host Library
 661:Src/usbh_conf.c ****   * @param  Delay: Delay in ms
 662:Src/usbh_conf.c ****   * @retval None
 663:Src/usbh_conf.c ****   */
 664:Src/usbh_conf.c **** void USBH_Delay(uint32_t Delay)
ARM GAS  /tmp/ccAZCIAD.s 			page 32


 665:Src/usbh_conf.c **** {
 1107              		.loc 1 665 0
 1108              		.cfi_startproc
 1109              		@ args = 0, pretend = 0, frame = 0
 1110              		@ frame_needed = 0, uses_anonymous_args = 0
 1111              	.LVL136:
 1112 0000 08B5     		push	{r3, lr}
 1113              	.LCFI31:
 1114              		.cfi_def_cfa_offset 8
 1115              		.cfi_offset 3, -8
 1116              		.cfi_offset 14, -4
 666:Src/usbh_conf.c ****   HAL_Delay(Delay);
 1117              		.loc 1 666 0
 1118 0002 FFF7FEFF 		bl	HAL_Delay
 1119              	.LVL137:
 667:Src/usbh_conf.c **** }
 1120              		.loc 1 667 0
 1121 0006 08BD     		pop	{r3, pc}
 1122              		.cfi_endproc
 1123              	.LFE163:
 1125              		.comm	hhcd_USB_OTG_FS,704,4
 1126              		.section	.rodata.USBH_LL_Init.str1.4,"aMS",%progbits,1
 1127              		.align	2
 1128              	.LC0:
 1129 0000 5372632F 		.ascii	"Src/usbh_conf.c\000"
 1129      75736268 
 1129      5F636F6E 
 1129      662E6300 
 1130              		.text
 1131              	.Letext0:
 1132              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1133              		.file 3 "/usr/arm-none-eabi/include/sys/lock.h"
 1134              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 1135              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.1.0/include/stddef.h"
 1136              		.file 6 "/usr/arm-none-eabi/include/sys/reent.h"
 1137              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1138              		.file 8 "/usr/arm-none-eabi/include/stdlib.h"
 1139              		.file 9 "Drivers/CMSIS/Include/core_cm7.h"
 1140              		.file 10 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1141              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 1142              		.file 12 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1143              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1144              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1145              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_usb.h"
 1146              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_hcd.h"
 1147              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1148              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1149              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1150              		.file 20 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 1151              		.file 21 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_ctlreq.h"
 1152              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1153              		.file 23 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_core.h"
 1154              		.file 24 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  /tmp/ccAZCIAD.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbh_conf.c
     /tmp/ccAZCIAD.s:18     .text.HAL_HCD_MspInit:0000000000000000 $t
     /tmp/ccAZCIAD.s:25     .text.HAL_HCD_MspInit:0000000000000000 HAL_HCD_MspInit
     /tmp/ccAZCIAD.s:122    .text.HAL_HCD_MspInit:000000000000007c $d
     /tmp/ccAZCIAD.s:128    .text.HAL_HCD_MspDeInit:0000000000000000 $t
     /tmp/ccAZCIAD.s:135    .text.HAL_HCD_MspDeInit:0000000000000000 HAL_HCD_MspDeInit
     /tmp/ccAZCIAD.s:177    .text.HAL_HCD_MspDeInit:0000000000000028 $d
     /tmp/ccAZCIAD.s:183    .text.HAL_HCD_SOF_Callback:0000000000000000 $t
     /tmp/ccAZCIAD.s:190    .text.HAL_HCD_SOF_Callback:0000000000000000 HAL_HCD_SOF_Callback
     /tmp/ccAZCIAD.s:213    .text.HAL_HCD_Connect_Callback:0000000000000000 $t
     /tmp/ccAZCIAD.s:220    .text.HAL_HCD_Connect_Callback:0000000000000000 HAL_HCD_Connect_Callback
     /tmp/ccAZCIAD.s:243    .text.HAL_HCD_Disconnect_Callback:0000000000000000 $t
     /tmp/ccAZCIAD.s:250    .text.HAL_HCD_Disconnect_Callback:0000000000000000 HAL_HCD_Disconnect_Callback
     /tmp/ccAZCIAD.s:273    .text.HAL_HCD_HC_NotifyURBChange_Callback:0000000000000000 $t
     /tmp/ccAZCIAD.s:280    .text.HAL_HCD_HC_NotifyURBChange_Callback:0000000000000000 HAL_HCD_HC_NotifyURBChange_Callback
     /tmp/ccAZCIAD.s:303    .text.HAL_HCD_PortEnabled_Callback:0000000000000000 $t
     /tmp/ccAZCIAD.s:310    .text.HAL_HCD_PortEnabled_Callback:0000000000000000 HAL_HCD_PortEnabled_Callback
     /tmp/ccAZCIAD.s:333    .text.HAL_HCD_PortDisabled_Callback:0000000000000000 $t
     /tmp/ccAZCIAD.s:340    .text.HAL_HCD_PortDisabled_Callback:0000000000000000 HAL_HCD_PortDisabled_Callback
     /tmp/ccAZCIAD.s:363    .text.USBH_LL_Init:0000000000000000 $t
     /tmp/ccAZCIAD.s:370    .text.USBH_LL_Init:0000000000000000 USBH_LL_Init
     /tmp/ccAZCIAD.s:445    .text.USBH_LL_Init:0000000000000058 $d
                            *COM*:00000000000002c0 hhcd_USB_OTG_FS
     /tmp/ccAZCIAD.s:451    .text.USBH_LL_DeInit:0000000000000000 $t
     /tmp/ccAZCIAD.s:458    .text.USBH_LL_DeInit:0000000000000000 USBH_LL_DeInit
     /tmp/ccAZCIAD.s:503    .text.USBH_LL_Start:0000000000000000 $t
     /tmp/ccAZCIAD.s:510    .text.USBH_LL_Start:0000000000000000 USBH_LL_Start
     /tmp/ccAZCIAD.s:555    .text.USBH_LL_Stop:0000000000000000 $t
     /tmp/ccAZCIAD.s:562    .text.USBH_LL_Stop:0000000000000000 USBH_LL_Stop
     /tmp/ccAZCIAD.s:607    .text.USBH_LL_GetSpeed:0000000000000000 $t
     /tmp/ccAZCIAD.s:614    .text.USBH_LL_GetSpeed:0000000000000000 USBH_LL_GetSpeed
     /tmp/ccAZCIAD.s:656    .text.USBH_LL_ResetPort:0000000000000000 $t
     /tmp/ccAZCIAD.s:663    .text.USBH_LL_ResetPort:0000000000000000 USBH_LL_ResetPort
     /tmp/ccAZCIAD.s:708    .text.USBH_LL_GetLastXferSize:0000000000000000 $t
     /tmp/ccAZCIAD.s:715    .text.USBH_LL_GetLastXferSize:0000000000000000 USBH_LL_GetLastXferSize
     /tmp/ccAZCIAD.s:738    .text.USBH_LL_OpenPipe:0000000000000000 $t
     /tmp/ccAZCIAD.s:745    .text.USBH_LL_OpenPipe:0000000000000000 USBH_LL_OpenPipe
     /tmp/ccAZCIAD.s:806    .text.USBH_LL_ClosePipe:0000000000000000 $t
     /tmp/ccAZCIAD.s:813    .text.USBH_LL_ClosePipe:0000000000000000 USBH_LL_ClosePipe
     /tmp/ccAZCIAD.s:858    .text.USBH_LL_SubmitURB:0000000000000000 $t
     /tmp/ccAZCIAD.s:865    .text.USBH_LL_SubmitURB:0000000000000000 USBH_LL_SubmitURB
     /tmp/ccAZCIAD.s:928    .text.USBH_LL_GetURBState:0000000000000000 $t
     /tmp/ccAZCIAD.s:935    .text.USBH_LL_GetURBState:0000000000000000 USBH_LL_GetURBState
     /tmp/ccAZCIAD.s:958    .text.USBH_LL_DriverVBUS:0000000000000000 $t
     /tmp/ccAZCIAD.s:965    .text.USBH_LL_DriverVBUS:0000000000000000 USBH_LL_DriverVBUS
     /tmp/ccAZCIAD.s:989    .text.USBH_LL_SetToggle:0000000000000000 $t
     /tmp/ccAZCIAD.s:996    .text.USBH_LL_SetToggle:0000000000000000 USBH_LL_SetToggle
     /tmp/ccAZCIAD.s:1050   .text.USBH_LL_GetToggle:0000000000000000 $t
     /tmp/ccAZCIAD.s:1057   .text.USBH_LL_GetToggle:0000000000000000 USBH_LL_GetToggle
     /tmp/ccAZCIAD.s:1098   .text.USBH_Delay:0000000000000000 $t
     /tmp/ccAZCIAD.s:1105   .text.USBH_Delay:0000000000000000 USBH_Delay
     /tmp/ccAZCIAD.s:1127   .rodata.USBH_LL_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
ARM GAS  /tmp/ccAZCIAD.s 			page 34


HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
USBH_LL_IncTimer
USBH_LL_Connect
USBH_LL_Disconnect
USBH_LL_NotifyURBChange
USBH_LL_PortEnabled
USBH_LL_PortDisabled
HAL_HCD_Init
HAL_HCD_GetCurrentFrame
USBH_LL_SetTimer
_Error_Handler
HAL_HCD_DeInit
HAL_HCD_Start
HAL_HCD_Stop
HAL_HCD_GetCurrentSpeed
HAL_HCD_ResetPort
HAL_HCD_HC_GetXferCount
HAL_HCD_HC_Init
HAL_HCD_HC_Halt
HAL_HCD_HC_SubmitRequest
HAL_HCD_HC_GetURBState
HAL_Delay
